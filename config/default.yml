general:
  n_jobs: 3
  cv: "logo"
  # cv: 9
  data_dir: ./data/csv-files/prepared/dataset/train
  calc_cm: True
  output_dir: ./output/tmp
  overwrite_output_dir: False
  save_models: False
  show_plots: False
  min_duration: &min_duration "60 seconds"
  max_duration: "60 seconds"
  split: True
  drop_empty: True
  treat_negative_values: "absolute"
  use_cache: True
  cache_dir: ./cache

defects:
  - free_particle
  - particle_insulator
  - protrusion_earth
  - protrusion_hv
  - floating
  - cavity

models-to-run:
  - dt-finger_ott
  - dt-finger_own
  - dt-finger_tugraz
  - knn_dtw-oned
  - knn_dtw-seqfinger_seqown
  - knn-finger_ott
  - knn-finger_own
  - knn-finger_tugraz
  - mlp-finger_ott
  - mlp-finger_own
  - mlp-finger_tugraz
  - ott_algo-finger_ott
  - svm_dtw-seqfinger_seqown
  - svm-finger_ott
  - svm-finger_own
  - svm-finger_tugraz

defaults:
  duration: &duration "30 seconds"
  step_duration: &step_duration "10 seconds"
  tsfresh_data: &tsfresh_data ./data/csv-files/prepared/dataset/train/tsfresh-features_0.5.0_minimal_60seconds.data
  normalize: &normalize True
  n_jobs: &n_jobs 1
  stop_early: &stop_early False
  patience: &patience 11
  epochs: &epochs 60
  verbose: &verbose 0

  dt_grid: &dt_grid
    criterion:
      - "gini"
      - "entropy"
    min_samples_split:
      - 2
      - 3
      - 4
      - 5
      - 10
      - 15
      - 20
    class_weight:
      - "balanced"
      - null
    max_features:
      - null
      - 5
    min_samples_leaf:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 10

  mlp_grid: &mlp_grid
    dropout:
      - 0.01
      - 0.05
      - 0.1
      - 0.2
      - 0.5
    hidden_layer_sizes:
      - !!python/tuple [3,3]
      - !!python/tuple [5,3]
      - !!python/tuple [7,3]
      - !!python/tuple [10,3]
      - !!python/tuple [15,3]
    epochs:
      - 10
      - 20
      - 40
      - 60
      - 100
      - 200


models:
  knn_dtw-oned:
    normalize: *normalize
    data:
      fix_duration: *min_duration
      frequency: "20ms"
    classifier:
      n_jobs: *n_jobs
      n_neighbors: 1

  knn_dtw-twod:
    data:
      max_len: 100000
    classifier:
      n_jobs: *n_jobs
      n_neighbors: 1

  knn-finger_ott:
    normalize: *normalize
    classifier:
      n_jobs: *n_jobs
      n_neighbors: 1

  knn-finger_own:
    normalize: *normalize
    classifier:
      n_jobs: *n_jobs
      n_neighbors: 1

  knn-finger_tugraz:
    normalize: *normalize
    classifier:
      n_jobs: *n_jobs
      n_neighbors: 1

  knn-finger_tsfresh:
    default_fc_parameters: MinimalFCParameters
    n_jobs: *n_jobs
    normalize: *normalize
    fdr_level: 0.23
    tsfresh_data: *tsfresh_data
    classifier:
      n_jobs: *n_jobs
      n_neighbors: 1

  knn_dtw-seqfinger_seqown:
    normalize: *normalize
    classifier:
      n_jobs: *n_jobs
      n_neighbors: 1
    data:
      duration: *duration
      step_duration: *step_duration

  ott_algo-finger_ott:
    normalize: False

  mlp-finger_ott:
    normalize: *normalize
    classifier:
      batch_size: 6
      hidden_layer_sizes:
        - 4
      dropout: 0.05
      optimizer: "adam"
      epochs: *epochs
      stop_early: *stop_early
      patience: *patience
      verbose: *verbose

  mlp-finger_own:
    normalize: *normalize
    classifier:
      hidden_layer_sizes: !!python/tuple [15,3]
      dropout: 0.1
      optimizer: "adam"
      batch_size: 1
      epochs: *epochs
      stop_early: *stop_early
      patience: *patience
      verbose: *verbose
    grid:
      classifier: *mlp_grid

  mlp-finger_tugraz:
    normalize: *normalize
    classifier:
      batch_size: 6
      hidden_layer_sizes: !!python/tuple [4]
      dropout: 0.05
      optimizer: "adam"
      epochs: *epochs
      stop_early: *stop_early
      patience: *patience
      verbose: *verbose

  svm-finger_ott:
    normalize: *normalize
    classifier:
      decision_function_shape: "ovr"

  svm-finger_own:
    normalize: *normalize
    classifier:
      decision_function_shape: "ovr"
      class_weight: "balanced"

  svm-finger_tugraz:
    normalize: *normalize
    classifier:
      decision_function_shape: "ovr"

  svm-finger_tsfresh:
    normalize: *normalize
    n_jobs: *n_jobs
    fdr_level: 0.23
    tsfresh_data: *tsfresh_data
    classifier:
      decision_function_shape: "ovr"

  svm_dtw-seqfinger_seqown:
    normalize: *normalize
    data:
      duration: *duration
      step_duration: *step_duration

  dt-finger_ott:
    normalize: *normalize

  dt-finger_own:
    normalize: *normalize
    classifier:
      min_samples_leaf: 4
      min_samples_split: 4
      class_weight: "balanced"
      max_features: null
    data:
      verbose: True
    grid:
      classifier: *dt_grid

  dt-finger_tugraz:
    normalize: *normalize

  dt-finger_tsfresh:
    normalize: *normalize
    n_jobs: *n_jobs
    fdr_level: 0.23
    tsfresh_data: *tsfresh_data
    classifier:
      min_samples_split: 5
